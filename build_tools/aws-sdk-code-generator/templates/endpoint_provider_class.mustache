# frozen_string_literal: true

{{#generated_src_warning}}
{{generated_src_warning}}
{{/generated_src_warning}}
module {{module_name}}
  class EndpointProvider
    def initialize(rule_set = nil)
      {{#in_memory}}
      @@endpoint_rules ||= Aws::Json.load(Base64.decode64(<<-JSON
        {{{endpoint_rules_encoded}}}
      JSON
      ))
      {{/in_memory}}
      {{^in_memory}}
      @@endpoint_rules ||= Aws::Json.load_file(
        File.expand_path('../../endpoint-rule-set.json', __dir__)
      )
      {{/in_memory}}
      rule_set ||= Aws::Endpoints::RuleSet.new(
        version: @@endpoint_rules['version'],
        service_id: @@endpoint_rules['serviceId'],
        parameters: @@endpoint_rules['parameters'],
        rules: @@endpoint_rules['rules']
      )
      @provider = Aws::Endpoints::RulesProvider.new(rule_set)
    end

    def resolve_endpoint(parameters)
      @provider.resolve_endpoint(parameters)
    end
  end
end
