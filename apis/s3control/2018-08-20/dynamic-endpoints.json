{
  "parameters": {
    "AccessPointName": {
      "name": "AccessPointName",
      "type": "String"
    },
    "AccountId": {
      "name": "AccountId",
      "type": "String"
    },
    "BucketName": {
      "name": "BucketName",
      "type": "String"
    },
    "OutpostId": {
      "name": "OutpostId",
      "type": "String"
    },
    "PrivateLink": {
      "name": "PrivateLink",
      "type": "String"
    },
    "RequiresAccountId": {
      "name": "RequiresAccountId",
      "type": "Boolean"
    },
    "S3Control::Accelerate": {
      "name": "S3Control::Accelerate",
      "type": "String"
    }
  },
  "rules": [
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{AccessPointName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{AccessPointName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "S3Control::Accelerate"
        }
      ],
      "error": "outpost does not support accelerate endpoints",
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:179)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{AccessPointName.arn-region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {}
      },
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:193)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{AccessPointName.arn-region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {}
      },
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:193)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        }
      ],
      "error": "outpost does not support dualstack endpoints",
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:216)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        }
      ],
      "error": "unsupported arn provided for AccessPointName endpoint parameter",
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:232)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        }
      ],
      "error": "outpost does not support dualstack endpoints",
      "description": "outpostIdPartitionEndpointRules (main.go:298)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{PrivateLink}.s3.{BucketName.arn-region}.vpce.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "privateLinkOutpostArnPartitionEndpointRules (main.go:353)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{PrivateLink}.s3.{BucketName.arn-region}.vpce.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "privateLinkOutpostArnPartitionEndpointRules (main.go:353)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        }
      ],
      "error": "invalid arn, expect outpost Bucket or AccessPoint ARN",
      "description": "privateLinkOutpostArnPartitionEndpointRules (main.go:377)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{BucketName.arn-region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{BucketName.arn-region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{BucketName.arn-region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{BucketName.arn-region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        }
      ],
      "error": "invalid arn, expect outpost Bucket or AccessPoint ARN",
      "description": "outpostArnPartitionEndpointRules (main.go:462)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        }
      ],
      "error": "invalid arn, expect outpost Bucket or AccessPoint ARN",
      "description": "outpostArnPartitionEndpointRules (main.go:479)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "endpointHostRules (main.go:135)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "RequiresAccountId"
        }
      ],
      "error": "operation requires AccountId but was not set",
      "description": "endpointHostRules (main.go:151)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "endpointHostRules (main.go:164)"
    },
    {
      "matchers": [
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        }
      ],
      "error": "Private link cannot be used in combination with DualStack.",
      "description": "invalidPrivateLinkEndpoint (main.go:430)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.control.{PrivateLink}.s3.{SDK::Region}.vpce.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "privateLinkAccountPartitionEndpointRules (main.go:394)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "error": "accountId was expected but not present",
      "description": "privateLinkAccountPartitionEndpointRules (main.go:410)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        }
      ],
      "endpoint": {
        "url": "https://control.{PrivateLink}.s3.{SDK::Region}.vpce.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "privateLinkValidCase (main.go:443)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        }
      ],
      "error": "accountId must be set to resolve endpoint",
      "description": "accountPartitionEndpointRules (main.go:642)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control-fips.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control.dualstack.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control-fips.dualstack.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control-fips.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control.dualstack.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control-fips.dualstack.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-cn",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{AccessPointName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-cn",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-cn",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{AccessPointName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-cn",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "S3Control::Accelerate"
        }
      ],
      "error": "outpost does not support accelerate endpoints",
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:179)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-cn",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{AccessPointName.arn-region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {}
      },
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:193)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-cn",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{AccessPointName.arn-region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {}
      },
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:193)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        }
      ],
      "error": "outpost does not support dualstack endpoints",
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:216)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        }
      ],
      "error": "unsupported arn provided for AccessPointName endpoint parameter",
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:232)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{SDK::Region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{SDK::Region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{SDK::Region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{SDK::Region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        }
      ],
      "error": "outpost does not support dualstack endpoints",
      "description": "outpostIdPartitionEndpointRules (main.go:298)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-cn",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{PrivateLink}.s3.{BucketName.arn-region}.vpce.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "privateLinkOutpostArnPartitionEndpointRules (main.go:353)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-cn",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{PrivateLink}.s3.{BucketName.arn-region}.vpce.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "privateLinkOutpostArnPartitionEndpointRules (main.go:353)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        }
      ],
      "error": "invalid arn, expect outpost Bucket or AccessPoint ARN",
      "description": "privateLinkOutpostArnPartitionEndpointRules (main.go:377)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-cn",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{BucketName.arn-region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-cn",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{BucketName.arn-region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-cn",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{BucketName.arn-region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-cn",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{BucketName.arn-region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        }
      ],
      "error": "invalid arn, expect outpost Bucket or AccessPoint ARN",
      "description": "outpostArnPartitionEndpointRules (main.go:462)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        }
      ],
      "error": "invalid arn, expect outpost Bucket or AccessPoint ARN",
      "description": "outpostArnPartitionEndpointRules (main.go:479)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "endpointHostRules (main.go:135)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "RequiresAccountId"
        }
      ],
      "error": "operation requires AccountId but was not set",
      "description": "endpointHostRules (main.go:151)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "endpointHostRules (main.go:164)"
    },
    {
      "matchers": [
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        }
      ],
      "error": "Private link cannot be used in combination with DualStack.",
      "description": "invalidPrivateLinkEndpoint (main.go:430)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.control.{PrivateLink}.s3.{SDK::Region}.vpce.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "privateLinkAccountPartitionEndpointRules (main.go:394)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "error": "accountId was expected but not present",
      "description": "privateLinkAccountPartitionEndpointRules (main.go:410)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        }
      ],
      "endpoint": {
        "url": "https://control.{PrivateLink}.s3.{SDK::Region}.vpce.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "privateLinkValidCase (main.go:443)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        }
      ],
      "error": "accountId must be set to resolve endpoint",
      "description": "accountPartitionEndpointRules (main.go:642)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control.{SDK::Region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control-fips.{SDK::Region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control.dualstack.{SDK::Region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control-fips.dualstack.{SDK::Region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control.{SDK::Region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control-fips.{SDK::Region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control.dualstack.{SDK::Region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-cn",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control-fips.dualstack.{SDK::Region}.amazonaws.com.cn",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{AccessPointName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{AccessPointName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "S3Control::Accelerate"
        }
      ],
      "error": "outpost does not support accelerate endpoints",
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:179)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{AccessPointName.arn-region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {}
      },
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:193)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{AccessPointName.arn-region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {}
      },
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:193)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        }
      ],
      "error": "outpost does not support dualstack endpoints",
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:216)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        }
      ],
      "error": "unsupported arn provided for AccessPointName endpoint parameter",
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:232)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{SDK::Region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{SDK::Region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{SDK::Region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{SDK::Region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        }
      ],
      "error": "outpost does not support dualstack endpoints",
      "description": "outpostIdPartitionEndpointRules (main.go:298)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{PrivateLink}.s3.{BucketName.arn-region}.vpce.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "privateLinkOutpostArnPartitionEndpointRules (main.go:353)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{PrivateLink}.s3.{BucketName.arn-region}.vpce.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "privateLinkOutpostArnPartitionEndpointRules (main.go:353)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        }
      ],
      "error": "invalid arn, expect outpost Bucket or AccessPoint ARN",
      "description": "privateLinkOutpostArnPartitionEndpointRules (main.go:377)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{BucketName.arn-region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{BucketName.arn-region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{BucketName.arn-region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{BucketName.arn-region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        }
      ],
      "error": "invalid arn, expect outpost Bucket or AccessPoint ARN",
      "description": "outpostArnPartitionEndpointRules (main.go:462)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        }
      ],
      "error": "invalid arn, expect outpost Bucket or AccessPoint ARN",
      "description": "outpostArnPartitionEndpointRules (main.go:479)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "endpointHostRules (main.go:135)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "RequiresAccountId"
        }
      ],
      "error": "operation requires AccountId but was not set",
      "description": "endpointHostRules (main.go:151)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "endpointHostRules (main.go:164)"
    },
    {
      "matchers": [
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        }
      ],
      "error": "Private link cannot be used in combination with DualStack.",
      "description": "invalidPrivateLinkEndpoint (main.go:430)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.control.{PrivateLink}.s3.{SDK::Region}.vpce.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "privateLinkAccountPartitionEndpointRules (main.go:394)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "error": "accountId was expected but not present",
      "description": "privateLinkAccountPartitionEndpointRules (main.go:410)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        }
      ],
      "endpoint": {
        "url": "https://control.{PrivateLink}.s3.{SDK::Region}.vpce.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "privateLinkValidCase (main.go:443)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        }
      ],
      "error": "accountId must be set to resolve endpoint",
      "description": "accountPartitionEndpointRules (main.go:642)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control.{SDK::Region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control-fips.{SDK::Region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control.dualstack.{SDK::Region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control-fips.dualstack.{SDK::Region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control.{SDK::Region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control-fips.{SDK::Region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control.dualstack.{SDK::Region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control-fips.dualstack.{SDK::Region}.c2s.ic.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso-b",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{AccessPointName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso-b",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso-b",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{AccessPointName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso-b",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "S3Control::Accelerate"
        }
      ],
      "error": "outpost does not support accelerate endpoints",
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:179)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso-b",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{AccessPointName.arn-region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {}
      },
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:193)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso-b",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{AccessPointName.arn-region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {}
      },
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:193)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        }
      ],
      "error": "outpost does not support dualstack endpoints",
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:216)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        }
      ],
      "error": "unsupported arn provided for AccessPointName endpoint parameter",
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:232)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{SDK::Region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{SDK::Region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{SDK::Region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{SDK::Region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        }
      ],
      "error": "outpost does not support dualstack endpoints",
      "description": "outpostIdPartitionEndpointRules (main.go:298)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso-b",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{PrivateLink}.s3.{BucketName.arn-region}.vpce.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "privateLinkOutpostArnPartitionEndpointRules (main.go:353)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso-b",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{PrivateLink}.s3.{BucketName.arn-region}.vpce.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "privateLinkOutpostArnPartitionEndpointRules (main.go:353)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        }
      ],
      "error": "invalid arn, expect outpost Bucket or AccessPoint ARN",
      "description": "privateLinkOutpostArnPartitionEndpointRules (main.go:377)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso-b",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{BucketName.arn-region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso-b",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{BucketName.arn-region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso-b",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{BucketName.arn-region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-iso-b",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{BucketName.arn-region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        }
      ],
      "error": "invalid arn, expect outpost Bucket or AccessPoint ARN",
      "description": "outpostArnPartitionEndpointRules (main.go:462)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        }
      ],
      "error": "invalid arn, expect outpost Bucket or AccessPoint ARN",
      "description": "outpostArnPartitionEndpointRules (main.go:479)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "endpointHostRules (main.go:135)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "RequiresAccountId"
        }
      ],
      "error": "operation requires AccountId but was not set",
      "description": "endpointHostRules (main.go:151)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "endpointHostRules (main.go:164)"
    },
    {
      "matchers": [
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        }
      ],
      "error": "Private link cannot be used in combination with DualStack.",
      "description": "invalidPrivateLinkEndpoint (main.go:430)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.control.{PrivateLink}.s3.{SDK::Region}.vpce.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "privateLinkAccountPartitionEndpointRules (main.go:394)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "error": "accountId was expected but not present",
      "description": "privateLinkAccountPartitionEndpointRules (main.go:410)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        }
      ],
      "endpoint": {
        "url": "https://control.{PrivateLink}.s3.{SDK::Region}.vpce.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "privateLinkValidCase (main.go:443)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        }
      ],
      "error": "accountId must be set to resolve endpoint",
      "description": "accountPartitionEndpointRules (main.go:642)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control.{SDK::Region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control-fips.{SDK::Region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control.dualstack.{SDK::Region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control-fips.dualstack.{SDK::Region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control.{SDK::Region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control-fips.{SDK::Region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control.dualstack.{SDK::Region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-iso-b",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control-fips.dualstack.{SDK::Region}.sc2s.sgov.gov",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-us-gov",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{AccessPointName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-us-gov",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-us-gov",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{AccessPointName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-us-gov",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "endpointHostOutpostARN (main.go:319)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "S3Control::Accelerate"
        }
      ],
      "error": "outpost does not support accelerate endpoints",
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:179)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-us-gov",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{AccessPointName.arn-region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {}
      },
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:193)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-us-gov",
          "param": "AccessPointName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "AccessPointName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{AccessPointName.arn-region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{AccessPointName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccessPointName.arn-account-id}",
          "x-amz-outpost-id": "{AccessPointName.arn-resource.1}"
        },
        "modifyParams": {}
      },
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:193)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        }
      ],
      "error": "outpost does not support dualstack endpoints",
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:216)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        }
      ],
      "error": "unsupported arn provided for AccessPointName endpoint parameter",
      "description": "accessPointNameOutpostARNPartitionEndpointRules (main.go:232)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:249)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "OutpostId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}",
          "x-amz-outpost-id": "{OutpostId}"
        },
        "modifyParams": {}
      },
      "description": "outpostIdPartitionEndpointRules (main.go:272)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "AccessPointName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "AccessPointName.arn-resource.0"
        }
      ],
      "error": "outpost does not support dualstack endpoints",
      "description": "outpostIdPartitionEndpointRules (main.go:298)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-us-gov",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{PrivateLink}.s3.{BucketName.arn-region}.vpce.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "privateLinkOutpostArnPartitionEndpointRules (main.go:353)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-us-gov",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        }
      ],
      "endpoint": {
        "url": "https://{PrivateLink}.s3.{BucketName.arn-region}.vpce.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.2}"
        }
      },
      "description": "privateLinkOutpostArnPartitionEndpointRules (main.go:353)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        }
      ],
      "error": "invalid arn, expect outpost Bucket or AccessPoint ARN",
      "description": "privateLinkOutpostArnPartitionEndpointRules (main.go:377)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-us-gov",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{BucketName.arn-region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-us-gov",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts.{BucketName.arn-region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-us-gov",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "bucket",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{BucketName.arn-region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "aws-us-gov",
          "param": "BucketName.arn-partition"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "accesspoint",
          "param": "BucketName.arn-resource.2"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "BucketName.arn-resource.3"
        }
      ],
      "endpoint": {
        "url": "https://s3-outposts-fips.{BucketName.arn-region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3-outposts",
            "signingScope": "{BucketName.arn-region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{BucketName.arn-account-id}",
          "x-amz-outpost-id": "{BucketName.arn-resource.1}"
        },
        "modifyParams": {
          "BucketName": "{BucketName.arn-resource.3}"
        }
      },
      "description": "bucketNameOutpostARNRule (main.go:499)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        },
        {
          "matcher": "stringEquals",
          "stringEquals": "outpost",
          "param": "BucketName.arn-resource.0"
        }
      ],
      "error": "invalid arn, expect outpost Bucket or AccessPoint ARN",
      "description": "outpostArnPartitionEndpointRules (main.go:462)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isArn",
          "isArn": true,
          "param": "BucketName"
        }
      ],
      "error": "invalid arn, expect outpost Bucket or AccessPoint ARN",
      "description": "outpostArnPartitionEndpointRules (main.go:479)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "endpointHostRules (main.go:135)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "RequiresAccountId"
        }
      ],
      "error": "operation requires AccountId but was not set",
      "description": "endpointHostRules (main.go:151)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "SDK::Host"
        }
      ],
      "endpoint": {
        "url": "https://{SDK::Host}",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "endpointHostRules (main.go:164)"
    },
    {
      "matchers": [
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        },
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        }
      ],
      "error": "Private link cannot be used in combination with DualStack.",
      "description": "invalidPrivateLinkEndpoint (main.go:430)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.control.{PrivateLink}.s3.{SDK::Region}.vpce.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "privateLinkAccountPartitionEndpointRules (main.go:394)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "error": "accountId was expected but not present",
      "description": "privateLinkAccountPartitionEndpointRules (main.go:410)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "PrivateLink"
        }
      ],
      "endpoint": {
        "url": "https://control.{PrivateLink}.s3.{SDK::Region}.vpce.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "privateLinkValidCase (main.go:443)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": false,
          "param": "AccountId"
        }
      ],
      "error": "accountId must be set to resolve endpoint",
      "description": "accountPartitionEndpointRules (main.go:642)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control-fips.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control.dualstack.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "RequiresAccountId"
        },
        {
          "matcher": "isSet",
          "isSet": true,
          "param": "AccountId"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://{AccountId}.s3-control-fips.dualstack.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {
          "x-amz-account-id": "{AccountId}"
        },
        "modifyParams": {}
      },
      "description": "accountPartitionEndpointRule (main.go:622)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control-fips.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": false,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control.dualstack.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    },
    {
      "matchers": [
        {
          "matcher": "partition",
          "partition": "aws-us-gov",
          "param": "SDK::Region"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::FIPS"
        },
        {
          "matcher": "booleanEquals",
          "booleanEquals": true,
          "param": "SDK::DualStack"
        }
      ],
      "endpoint": {
        "url": "https://s3-control-fips.dualstack.{SDK::Region}.amazonaws.com",
        "authSchemes": [
          "v4"
        ],
        "authParams": {
          "v4": {
            "signingName": "s3",
            "signingScope": "{SDK::Region}"
          }
        },
        "headers": {},
        "modifyParams": {}
      },
      "description": "partitionEndpointRule (main.go:660)"
    }
  ]
}
